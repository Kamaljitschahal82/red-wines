setwd("C:/Users/Administrador/Dropbox/estudios/dataAnalyst/p4/p4_explore")
reds <- read.csv('wineQualityReds.csv')
# Chunk 4
names(reds)
# Chunk 5
reds <- plyr::rename(reds, c("X"="id"))
str(reds)
# Chunk 6
reds$quality <- factor(reds$quality)
# Chunk 7
with(reds, subset(free.sulfur.dioxide, free.sulfur.dioxide %% 1 != 0))
with(reds, subset(total.sulfur.dioxide, total.sulfur.dioxide %% 1 != 0))
# Chunk 8
summary(reds)
# Chunk 9
ggplot(data = reds, aes(x = fixed.acidity)) +
geom_histogram(binwidth = 0.5) +
scale_x_continuous(breaks = seq(4, 16, 1), limits = c(4, 16))
# Chunk 10
ggplot(data = reds, aes(x = volatile.acidity)) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 2, 0.1), limits = c(0, 2))
# Chunk 11
c1 <- ggplot(data = reds, aes(x = citric.acid)) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 1.2, 0.1), limits = c(0, 1.2))
c2 <- ggplot(data = reds, aes(x = citric.acid)) +
geom_histogram(binwidth = 0.05) +
scale_x_log10(breaks = seq(0, 1.2, 0.1))
grid.arrange(c1, c2, ncol=1)
# Chunk 12
r1 <- ggplot(data = reds, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.1)
r2 <- ggplot(data = reds, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 3.5, 0.5), limits = c(0, 3.5))
grid.arrange(r1, r2, ncol=1)
# Chunk 13
ch1 <- ggplot(data = reds, aes(x = chlorides)) +
geom_histogram(binwidth = 0.005)
ch2 <- ggplot(data = reds, aes(x = chlorides)) +
geom_histogram(binwidth = 0.005) +
scale_x_continuous(breaks = seq(0, 0.15, 0.05), limits = c(0, 0.15))
grid.arrange(ch1, ch2, ncol=1)
# Chunk 14
fsd1 <- ggplot(data = reds, aes(x = free.sulfur.dioxide)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = seq(0, 80, 5))
fsd2 <- ggplot(data = reds, aes(x = free.sulfur.dioxide)) +
geom_histogram(binwidth = 0.1) +
scale_x_log10(breaks = seq(0, 80, 10))
grid.arrange(fsd1, fsd2, ncol=1)
# Chunk 15
tsd1 <- ggplot(data = reds, aes(x = total.sulfur.dioxide)) +
geom_histogram(binwidth = 5) +
scale_x_continuous(breaks = seq(0, 290, 10))
tsd2 <- ggplot(data = reds, aes(x = total.sulfur.dioxide)) +
geom_histogram(binwidth = 0.1) +
scale_x_log10(breaks = seq(0, 290, 25))
grid.arrange(tsd1, tsd2, ncol=1)
# Chunk 16
ggplot(data = reds, aes(x = density)) +
geom_histogram(binwidth = 0.0005)
# Chunk 17
ggplot(data = reds, aes(x = pH)) +
geom_histogram(binwidth = 0.05)
# Chunk 18
ggplot(data = reds, aes(x = sulphates)) +
geom_histogram(binwidth = 0.05)
# Chunk 19
a1 <- ggplot(data = reds, aes(x = alcohol)) +
geom_histogram(binwidth = 0.1)
a2 <- ggplot(data = reds, aes(x = alcohol)) +
geom_histogram(binwidth = 0.01) +
scale_x_log10()
grid.arrange(a1, a2, ncol=1)
# Chunk 20
ggplot(data = reds, aes(x = quality)) +
geom_bar() +
scale_x_discrete(breaks = seq(0, 10, 1))
# Chunk 21
ggpairs(subset(reds, select = -id),
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))),
axisLabels="internal")
# Chunk 22
ggplot(data = reds, aes(y = volatile.acidity, x = quality)) +
geom_boxplot()
# Chunk 23
v1 <- ggplot(data = reds, aes(volatile.acidity, colour = quality)) +
geom_freqpoly(binwidth = 0.05)
v2 <- ggplot(data = reds, aes(volatile.acidity, fill = quality)) +
geom_histogram(binwidth = 0.05)
grid.arrange(v1, v2, ncol=1)
# Chunk 24
ggplot(data = reds, aes(y = citric.acid, x = quality)) +
geom_boxplot()
# Chunk 25
c1 <- ggplot(data = reds, aes(citric.acid, colour = quality)) +
geom_freqpoly(binwidth = 0.05)
c2 <- ggplot(data = reds, aes(citric.acid, fill = quality)) +
geom_histogram(binwidth = 0.05)
grid.arrange(c1, c2, ncol=1)
# Chunk 26
ggplot(data = reds, aes(y = alcohol, x = quality)) +
geom_boxplot()
# Chunk 27
a1 <- ggplot(data = reds, aes(alcohol, colour = quality)) +
geom_freqpoly(binwidth = 0.1)
a2 <- ggplot(data = reds, aes(alcohol, fill = quality)) +
geom_histogram(binwidth = 0.1)
grid.arrange(a1, a2, ncol=1)
# Chunk 28
ggplot(data = reds, aes(y = sulphates, x = quality)) +
geom_boxplot()
# Chunk 29
s1 <- ggplot(data = reds, aes(sulphates, colour = quality)) +
geom_freqpoly(binwidth = 0.05)
s2 <- ggplot(data = reds, aes(sulphates, fill = quality)) +
geom_histogram(binwidth = 0.05)
grid.arrange(s1, s2, ncol=1)
# Chunk 30
ggplot(data = reds, aes(y = density, x = quality)) +
geom_boxplot()
# Chunk 31
ggplot(data = reds, aes(y = pH, x = quality)) +
geom_boxplot()
# Chunk 32
ggplot(data = reds, aes(y = volatile.acidity, x = citric.acid)) +
geom_point()
# Chunk 33
ggplot(data = reds, aes(y = pH, x = citric.acid)) +
geom_point()
# Chunk 34
ggplot(data = reds, aes(y = density, x = alcohol)) +
geom_point()
# Chunk 35
p1 <- ggplot(data = reds, aes(y = citric.acid, x = alcohol, colour=quality)) +
geom_point(size=3)
p2 <- ggplot(data = reds, aes(y = volatile.acidity, x = alcohol, colour=quality)) +
geom_point(size=3)
p3 <- ggplot(data = reds, aes(y = volatile.acidity, x = citric.acid, colour=quality)) +
geom_point(size=3)
grid.arrange(p1, p2, p3, ncol=1)
# Chunk 36
df.extreme.quality <- subset(reds, quality != 6 & quality != 5)
ggplot(data = df.extreme.quality, aes(y = citric.acid, x = alcohol, colour=quality)) +
geom_point(size=3)
# Chunk 37
ggplot(data = df.extreme.quality, aes(y = volatile.acidity, x = alcohol, colour=quality)) +
geom_point(size=3)
# Chunk 38
ggplot(data = df.extreme.quality, aes(y = volatile.acidity, x = citric.acid, colour=quality)) +
geom_point(size=3)
# Chunk 39
ggplot(data = df.extreme.quality, aes(y = citric.acid, x = alcohol, colour=quality, size=volatile.acidity)) +
geom_point()
# Chunk 40
ggplot(data = reds, aes(x = quality, fill = quality)) +
geom_bar() +
scale_y_continuous(breaks = seq(0, 700, 100)) +
scale_x_discrete(breaks = seq(0, 10, 1)) +
guides(fill = FALSE) +
ggtitle('Quality histogram') +
xlab('Quality') +
ylab('Number of wines')
# Chunk 41
acetic_label <- expression("Acetic acid content" ~ (g/dm^{3}))
citric_label <- expression("Citric acid content" ~ (g/dm^{3}))
alcohol_label <- "Alcohol content (% by volume)"
no_wines_label <- "Number of wines"
v1 <- ggplot(data = reds, aes(y = volatile.acidity, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Volatile acidity by quality') +
xlab('Quality') +
ylab(acetic_label)
v2 <- ggplot(data = reds, aes(volatile.acidity, colour = quality)) +
geom_freqpoly(binwidth = 0.05, size = 1) +
guides(colour = FALSE) +
xlab(acetic_label) +
ylab(no_wines_label)
v3 <- ggplot(data = reds, aes(volatile.acidity, fill = quality)) +
geom_histogram(binwidth = 0.05) +
guides(fill = FALSE) +
xlab(acetic_label) +
ylab(no_wines_label)
c1 <- ggplot(data = reds, aes(y = citric.acid, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Citric acid by quality') +
xlab('Quality') +
ylab(citric_label)
c2 <- ggplot(data = reds, aes(citric.acid, colour = quality)) +
geom_freqpoly(binwidth = 0.05, size = 1) +
guides(colour = FALSE) +
xlab(citric_label) +
ylab('')
c3 <- ggplot(data = reds, aes(citric.acid, fill = quality)) +
geom_histogram(binwidth = 0.05) +
guides(fill = FALSE) +
xlab(citric_label) +
ylab('')
a1 <- ggplot(data = reds, aes(y = alcohol, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Alcohol by quality') +
xlab('Quality') +
ylab(alcohol_label)
a2 <- ggplot(data = reds, aes(alcohol, colour = quality)) +
geom_freqpoly(binwidth = 0.1, size = 1) +
xlab(alcohol_label) +
ylab('')
a3 <- ggplot(data = reds, aes(alcohol, fill = quality)) +
geom_histogram(binwidth = 0.1) +
xlab(alcohol_label) +
ylab('')
grid.arrange(v1, c1, a1, v2, c2, a2, v3, c3, a3, ncol=3)
ggplot(data = df.extreme.quality, aes(y = citric.acid, x = alcohol, colour=quality, size=volatile.acidity)) +
geom_point() +
ggtitle('The three most influential features versus quality in extreme quality wines') +
xlab(alcohol_label) +
ylab(citric_label) +
scale_size_continuous(name=expression("acetic acid" ~ (g/dm^{3})))
acetic_label <- expression("Acetic acid content" ~ (g/dm^{3}))
citric_label <- expression("Citric acid content" ~ (g/dm^{3}))
alcohol_label <- "Alcohol content (% by volume)"
no_wines_label <- "Number of wines"
v1 <- ggplot(data = reds, aes(y = volatile.acidity, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Volatile acidity by quality') +
xlab('Quality') +
ylab(acetic_label)
c1 <- ggplot(data = reds, aes(y = citric.acid, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Citric acid by quality') +
xlab('Quality') +
ylab(citric_label)
a1 <- ggplot(data = reds, aes(y = alcohol, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Alcohol by quality') +
xlab('Quality') +
ylab(alcohol_label)
grid.arrange(v1, c1, a1, ncol=3)
acetic_label <- expression("Acetic acid content" ~ (g/dm^{3}))
citric_label <- expression("Citric acid content" ~ (g/dm^{3}))
alcohol_label <- "Alcohol content (% by volume)"
no_wines_label <- "Number of wines"
v1 <- ggplot(data = reds, aes(y = volatile.acidity, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Volatile acidity by quality') +
xlab('Quality') +
ylab(acetic_label)
c1 <- ggplot(data = reds, aes(y = citric.acid, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Citric acid by quality') +
xlab('Quality') +
ylab(citric_label)
a1 <- ggplot(data = reds, aes(y = alcohol, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Alcohol by quality') +
xlab('Quality') +
ylab(alcohol_label)
grid.arrange(v1, c1, a1, ncol=2)
(681+638)/1599
ggplot(data = reds, aes(x = quality, fill = quality)) +
geom_bar() +
scale_y_continuous(breaks = seq(0, 700, 100)) +
scale_x_discrete(breaks = seq(0, 10, 1)) +
guides(fill = FALSE) +
ggtitle('Quality histogram') +
xlab('Quality') +
ylab('Number of wines')
acetic_label <- expression("Acetic acid content" ~ (g/dm^{3}))
citric_label <- expression("Citric acid content" ~ (g/dm^{3}))
alcohol_label <- "Alcohol content (% by volume)"
no_wines_label <- "Number of wines"
v1 <- ggplot(data = reds, aes(y = volatile.acidity, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Volatile acidity by quality') +
xlab('Quality') +
ylab(acetic_label)
c1 <- ggplot(data = reds, aes(y = citric.acid, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Citric acid by quality') +
xlab('Quality') +
ylab(citric_label)
a1 <- ggplot(data = reds, aes(y = alcohol, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Alcohol by quality') +
xlab('Quality') +
ylab(alcohol_label)
grid.arrange(v1, c1, a1, ncol=2)
acetic_label <- expression("Acetic acid content" ~ (g/dm^{3}))
citric_label <- expression("Citric acid content" ~ (g/dm^{3}))
alcohol_label <- "Alcohol content (% by volume)"
v1 <- ggplot(data = reds, aes(y = volatile.acidity, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Volatile acidity by quality') +
xlab('Quality') +
ylab(acetic_label)
c1 <- ggplot(data = reds, aes(y = citric.acid, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Citric acid by quality') +
xlab('Quality') +
ylab(citric_label)
a1 <- ggplot(data = reds, aes(y = alcohol, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Alcohol by quality') +
xlab('Quality') +
ylab(alcohol_label)
grid.arrange(v1, c1, a1, ncol=2)
cor(volatile.acidity, citric.acid)
cor("volatile.acidity", "citric.acid")
with(df, cor(volatile.acidity, citric.acid))
with(df, cor(x ~ volatile.acidity, y ~ citric.acid)))
with(df, cor(x ~ volatile.acidity, y ~ citric.acid))
cor(reds$citric.acid, reds$volatile.acidity)
with(reds, cor(citric.acid, volatile.acidity))
cor(reds)
# Chunk 1
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(gridExtra)
library(psych)
library(dplyr)
library(scales)
library(memisc)
theme_set(theme_minimal(20))
# Chunk 2
data(diamonds)
# Chunk 3
# Summarize the data set
dim(diamonds)
names(diamonds)
str(diamonds)
levels(diamonds$cut)
levels(diamonds$color)
levels(diamonds$clarity)
summary(diamonds)
# Chunk 4
qplot(price, data = diamonds)
qplot(price, data = diamonds, binwidth = 0.01) +
scale_x_log10(breaks = c(100, 500, 1000, 1500, 2000, 5000, 10000, 15000))
# Chunk 5
qplot(carat, data = diamonds, binwidth = .1) +
coord_cartesian(xlim = c(0, 2))
qplot(carat, data = diamonds, binwidth = .01) +
coord_cartesian(xlim = c(0, 2))
# Chunk 6
table(diamonds$carat == 0)
summary(diamonds$carat)
# Chunk 7
sort(table(diamonds$carat), decreasing = T)
# Chunk 8
qplot(depth, data = diamonds, binwidth = .1) +
coord_cartesian(xlim = c(55, 70))
summary(diamonds$depth)
# Chunk 9
qplot(table, data = diamonds) +
coord_cartesian(xlim = c(50, 70))
qplot(table, data = diamonds, binwidth = 0.1) +
coord_cartesian(xlim = c(50, 70))
summary(diamonds$table)
# Chunk 10
sort(table(diamonds$table), decreasing = T)
# Chunk 11
qplot(x, data = diamonds, binwidth = 0.1)
qplot(x, data = diamonds, geom = 'freqpoly', binwidth = 0.1)
table(diamonds$x == 0)
# Chunk 12
qplot(y, data = diamonds, binwidth = 0.1)
qplot(y, data = diamonds, binwidth = 0.1) +
coord_cartesian(xlim = c(0, 10))
table(diamonds$y == 0)
# Chunk 13
qplot(z, data = diamonds, binwidth = 0.1)
qplot(z, data = diamonds, binwidth = 0.1) +
coord_cartesian(xlim = c(0, 7))
table(diamonds$z == 0)
# Chunk 14
# using filter and anti_join in dlyr
missingDim <- filter(diamonds, x==0 | y==0 | z==0)
missingDim
summary(missingDim$price)
summary(anti_join(diamonds, missingDim)$price)
# Chunk 15
bestDiamonds <- subset(diamonds, (color == 'D' | color == 'E') &
(clarity == 'IF' | clarity == 'VVS1') &
(cut == 'Ideal'| cut == 'Premium'))
qplot(x = price, data = bestDiamonds)
summary(bestDiamonds$price)
summary(bestDiamonds$price/bestDiamonds$carat)
# Chunk 16
worstDiamonds <- subset(diamonds, (color == 'J' | color == 'I') &
(clarity == 'I1' | clarity == 'SI2') &
(cut == 'Fair'| cut == 'Good'))
qplot(x = price, data = worstDiamonds)
summary(worstDiamonds$price)
summary(worstDiamonds$price/worstDiamonds$carat)
# Chunk 17
diamonds <- transform(diamonds, volume = x * y * z)
table(diamonds$volume == 0)
noVolume <- subset(diamonds, volume == 0)
noVolume
table(diamonds$carat == 0)
# Chunk 18
# create a volume from carat and density of diamonds
diamonds <- transform(diamonds, volume = carat * 2 / 3.34)
summary(diamonds$volume)
# Chunk 19
qplot(volume, data=diamonds, binwidth=0.1)
qplot(volume, data=diamonds, binwidth=0.01)
qplot(volume, data=diamonds, binwidth=0.01) +
scale_x_log10()
# Chunk 20
sort(table(round(diamonds$volume, 3)), decreasing=T)[1:20]
cor(diamonds[, c(1, 5, 6, 7, 8, 9, 10, 11)])
View(diamonds)
cor(reds[sapply(x, is.numeric)])
cor(reds[sapply(reds, is.numeric)])
acetic_label <- expression("Acetic acid content" ~ (g/dm^{3}))
citric_label <- expression("Citric acid content" ~ (g/dm^{3}))
alcohol_label <- "Alcohol content (% by volume)"
v1 <- ggplot(data = reds, aes(y = volatile.acidity, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Volatile acidity by quality') +
xlab('Quality') +
ylab(acetic_label)
c1 <- ggplot(data = reds, aes(y = citric.acid, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Citric acid by quality') +
xlab('Quality') +
ylab(citric_label)
a1 <- ggplot(data = reds, aes(y = alcohol, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Alcohol by quality') +
xlab('Quality') +
ylab(alcohol_label)
grid.arrange(v1, c1, a1, ncol=2)
subset(reds, quality == 5)
cor(subset(reds, quality == 5)$volatile.acidity, subset(reds, quality == 5)$volatile.acidity)
cor(subset(reds, quality == 5)$volatile.acidity, subset(reds, quality == 6)$volatile.acidity)
summary(reds)
by(reds, quality, summary)
by(reds, reds$quality, summary)
by(reds, reds$quality, iqr)
by(reds, reds$quality, IQR)
ggplot(data = df.extreme.quality, aes(y = citric.acid, x = alcohol, colour=quality, size=volatile.acidity)) +
geom_point() +
ggtitle('The three most influential features versus quality in extreme quality wines') +
xlab(alcohol_label) +
ylab(citric_label) +
scale_size_continuous(name=expression("acetic acid" ~ (g/dm^{3})))
by(subset(reds, reds$volatile.acidity > 1.2), quality, count)
by(subset(reds, reds$volatile.acidity > 1.2), reds$quality, count)
by(subset(reds, reds$volatile.acidity > 1.2), reds$quality, summary)
summary(subset(reds, reds$volatile.acidity > 1.2))
summary(subset(reds, reds$volatile.acidity > 1))
subset(reds, reds$volatile.acidity > 1))$quality
(subset(reds, reds$volatile.acidity > 1))$quality
summary(subset(reds, reds$volatile.acidity > 1))
by(reds, quality, summary)
by(reds, reds$quality, summary)
summary(subset(reds, reds$volatile.acidity > 1))
summary(subset(reds, reds$volatile.acidity > 0.9))
by(reds, reds$quality, summary)
summary(subset(reds, reds$volatile.acidity > 0.9))
summary(subset(reds, reds$volatile.acidity > 0.8))
acetic_label <- expression("Acetic acid content" ~ (g/dm^{3}))
citric_label <- expression("Citric acid content" ~ (g/dm^{3}))
alcohol_label <- "Alcohol content (% by volume)"
v1 <- ggplot(data = reds, aes(y = volatile.acidity, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Volatile acidity by quality') +
xlab('Quality') +
ylab(acetic_label)
c1 <- ggplot(data = reds, aes(y = citric.acid, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Citric acid by quality') +
xlab('Quality') +
ylab(citric_label)
a1 <- ggplot(data = reds, aes(y = alcohol, x = quality, fill = quality)) +
geom_boxplot() +
guides(fill = FALSE) +
ggtitle('Alcohol by quality') +
xlab('Quality') +
ylab(alcohol_label)
grid.arrange(v1, c1, a1, ncol=2)
summary(reds)
summary(reds)
